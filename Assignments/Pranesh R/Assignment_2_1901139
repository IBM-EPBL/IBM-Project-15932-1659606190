{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FnQQOk4OxGPB"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import warnings \n",
        "warnings.filterwarnings('ignore')"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Loading Dataset"
      ],
      "metadata": {
        "id": "3oYP8VVNyHBj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = pd.read_csv(\"/content/Churn_Modelling.csv\")\n",
        "dataset.head()"
      ],
      "metadata": {
        "id": "-FNe1pq7xLC9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "aae2b647-39e4-4fe7-8a58-3a9fca9d57c8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
              "0          1    15634602  Hargrave          619    France  Female   42   \n",
              "1          2    15647311      Hill          608     Spain  Female   41   \n",
              "2          3    15619304      Onio          502    France  Female   42   \n",
              "3          4    15701354      Boni          699    France  Female   39   \n",
              "4          5    15737888  Mitchell          850     Spain  Female   43   \n",
              "\n",
              "   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
              "0       2       0.00              1          1               1   \n",
              "1       1   83807.86              1          0               1   \n",
              "2       8  159660.80              3          1               0   \n",
              "3       1       0.00              2          0               0   \n",
              "4       2  125510.82              1          1               1   \n",
              "\n",
              "   EstimatedSalary  Exited  \n",
              "0        101348.88       1  \n",
              "1        112542.58       0  \n",
              "2        113931.57       1  \n",
              "3         93826.63       0  \n",
              "4         79084.10       0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8ff183f5-a938-4aad-8cbd-b94989c87bc8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RowNumber</th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>Surname</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Geography</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>15634602</td>\n",
              "      <td>Hargrave</td>\n",
              "      <td>619</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>101348.88</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>15647311</td>\n",
              "      <td>Hill</td>\n",
              "      <td>608</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>83807.86</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>112542.58</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>15619304</td>\n",
              "      <td>Onio</td>\n",
              "      <td>502</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>42</td>\n",
              "      <td>8</td>\n",
              "      <td>159660.80</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>113931.57</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>15701354</td>\n",
              "      <td>Boni</td>\n",
              "      <td>699</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>39</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>93826.63</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>15737888</td>\n",
              "      <td>Mitchell</td>\n",
              "      <td>850</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>125510.82</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>79084.10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ff183f5-a938-4aad-8cbd-b94989c87bc8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8ff183f5-a938-4aad-8cbd-b94989c87bc8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8ff183f5-a938-4aad-8cbd-b94989c87bc8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Descriptive Statistics on Dataset"
      ],
      "metadata": {
        "id": "Q4DIYKqSyhgm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "OafCuK7fyvGV",
        "outputId": "28dc3997-ef33-465f-873d-adbe3361b26e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         RowNumber    CustomerId   CreditScore           Age        Tenure  \\\n",
              "count  10000.00000  1.000000e+04  10000.000000  10000.000000  10000.000000   \n",
              "mean    5000.50000  1.569094e+07    650.528800     38.921800      5.012800   \n",
              "std     2886.89568  7.193619e+04     96.653299     10.487806      2.892174   \n",
              "min        1.00000  1.556570e+07    350.000000     18.000000      0.000000   \n",
              "25%     2500.75000  1.562853e+07    584.000000     32.000000      3.000000   \n",
              "50%     5000.50000  1.569074e+07    652.000000     37.000000      5.000000   \n",
              "75%     7500.25000  1.575323e+07    718.000000     44.000000      7.000000   \n",
              "max    10000.00000  1.581569e+07    850.000000     92.000000     10.000000   \n",
              "\n",
              "             Balance  NumOfProducts    HasCrCard  IsActiveMember  \\\n",
              "count   10000.000000   10000.000000  10000.00000    10000.000000   \n",
              "mean    76485.889288       1.530200      0.70550        0.515100   \n",
              "std     62397.405202       0.581654      0.45584        0.499797   \n",
              "min         0.000000       1.000000      0.00000        0.000000   \n",
              "25%         0.000000       1.000000      0.00000        0.000000   \n",
              "50%     97198.540000       1.000000      1.00000        1.000000   \n",
              "75%    127644.240000       2.000000      1.00000        1.000000   \n",
              "max    250898.090000       4.000000      1.00000        1.000000   \n",
              "\n",
              "       EstimatedSalary        Exited  \n",
              "count     10000.000000  10000.000000  \n",
              "mean     100090.239881      0.203700  \n",
              "std       57510.492818      0.402769  \n",
              "min          11.580000      0.000000  \n",
              "25%       51002.110000      0.000000  \n",
              "50%      100193.915000      0.000000  \n",
              "75%      149388.247500      0.000000  \n",
              "max      199992.480000      1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6bb6d597-385e-46b0-8811-f105db6dee05\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RowNumber</th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>10000.00000</td>\n",
              "      <td>1.000000e+04</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.00000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>10000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5000.50000</td>\n",
              "      <td>1.569094e+07</td>\n",
              "      <td>650.528800</td>\n",
              "      <td>38.921800</td>\n",
              "      <td>5.012800</td>\n",
              "      <td>76485.889288</td>\n",
              "      <td>1.530200</td>\n",
              "      <td>0.70550</td>\n",
              "      <td>0.515100</td>\n",
              "      <td>100090.239881</td>\n",
              "      <td>0.203700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2886.89568</td>\n",
              "      <td>7.193619e+04</td>\n",
              "      <td>96.653299</td>\n",
              "      <td>10.487806</td>\n",
              "      <td>2.892174</td>\n",
              "      <td>62397.405202</td>\n",
              "      <td>0.581654</td>\n",
              "      <td>0.45584</td>\n",
              "      <td>0.499797</td>\n",
              "      <td>57510.492818</td>\n",
              "      <td>0.402769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.556570e+07</td>\n",
              "      <td>350.000000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>11.580000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2500.75000</td>\n",
              "      <td>1.562853e+07</td>\n",
              "      <td>584.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>51002.110000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>5000.50000</td>\n",
              "      <td>1.569074e+07</td>\n",
              "      <td>652.000000</td>\n",
              "      <td>37.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>97198.540000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>100193.915000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>7500.25000</td>\n",
              "      <td>1.575323e+07</td>\n",
              "      <td>718.000000</td>\n",
              "      <td>44.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>127644.240000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>149388.247500</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>10000.00000</td>\n",
              "      <td>1.581569e+07</td>\n",
              "      <td>850.000000</td>\n",
              "      <td>92.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>250898.090000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>199992.480000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bb6d597-385e-46b0-8811-f105db6dee05')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6bb6d597-385e-46b0-8811-f105db6dee05 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6bb6d597-385e-46b0-8811-f105db6dee05');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset[[\"NumOfProducts\" ,\"HasCrCard\", \"IsActiveMember\"]] = dataset[[\"NumOfProducts\" ,\"HasCrCard\", \"IsActiveMember\"]].astype(str)"
      ],
      "metadata": {
        "id": "NBetvQEhy3I-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dataset.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "etFQf5piy-hW",
        "outputId": "ac3fe9d3-4e01-4096-9a38-fcf23bf8b0b6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 10000 entries, 0 to 9999\n",
            "Data columns (total 14 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   RowNumber        10000 non-null  int64  \n",
            " 1   CustomerId       10000 non-null  int64  \n",
            " 2   Surname          10000 non-null  object \n",
            " 3   CreditScore      10000 non-null  int64  \n",
            " 4   Geography        10000 non-null  object \n",
            " 5   Gender           10000 non-null  object \n",
            " 6   Age              10000 non-null  int64  \n",
            " 7   Tenure           10000 non-null  int64  \n",
            " 8   Balance          10000 non-null  float64\n",
            " 9   NumOfProducts    10000 non-null  object \n",
            " 10  HasCrCard        10000 non-null  object \n",
            " 11  IsActiveMember   10000 non-null  object \n",
            " 12  EstimatedSalary  10000 non-null  float64\n",
            " 13  Exited           10000 non-null  int64  \n",
            "dtypes: float64(2), int64(6), object(6)\n",
            "memory usage: 1.1+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset.drop(\"RowNumber\",axis=1,inplace=True)"
      ],
      "metadata": {
        "id": "J6d37eG6zDXH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Visualization"
      ],
      "metadata": {
        "id": "N4QCrVd_zNRZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Univariate Analysis"
      ],
      "metadata": {
        "id": "QjMTCNps0PtR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8,8))\n",
        "plt.hist(dataset.EstimatedSalary,bins=int(np.sqrt(len(list(dataset.EstimatedSalary)))))\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 483
        },
        "id": "ALM5Vxdgzoho",
        "outputId": "f112cbc0-33f9-41e7-c7bf-326be271d68e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dt2 = dataset.sort_values(by=\"EstimatedSalary\")\n",
        "dt2.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "_aBRVWqR0geK",
        "outputId": "085b9ae5-f088-4297-f004-ebe229dbdd26"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      CustomerId   Surname  CreditScore Geography  Gender  Age  Tenure  \\\n",
              "2362    15791053  Lucciano          709   Germany    Male   45       4   \n",
              "9647    15679693    Walker          625    France    Male   31       5   \n",
              "9010    15786463     Hsing          645   Germany  Female   59       8   \n",
              "5548    15639662  Phillips          710    France    Male   38       2   \n",
              "4989    15602851    Ozioma          629    France    Male   40       9   \n",
              "\n",
              "        Balance NumOfProducts HasCrCard IsActiveMember  EstimatedSalary  \\\n",
              "2362  122917.71             1         1              1            11.58   \n",
              "9647       0.00             2         0              1            90.07   \n",
              "9010  121669.93             2         0              0            91.75   \n",
              "5548       0.00             2         1              0            96.27   \n",
              "4989       0.00             1         1              0           106.67   \n",
              "\n",
              "      Exited  \n",
              "2362       1  \n",
              "9647       0  \n",
              "9010       1  \n",
              "5548       0  \n",
              "4989       0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c31cddf2-91e3-4902-bc4c-e370ceb8fde8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>Surname</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Geography</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2362</th>\n",
              "      <td>15791053</td>\n",
              "      <td>Lucciano</td>\n",
              "      <td>709</td>\n",
              "      <td>Germany</td>\n",
              "      <td>Male</td>\n",
              "      <td>45</td>\n",
              "      <td>4</td>\n",
              "      <td>122917.71</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>11.58</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9647</th>\n",
              "      <td>15679693</td>\n",
              "      <td>Walker</td>\n",
              "      <td>625</td>\n",
              "      <td>France</td>\n",
              "      <td>Male</td>\n",
              "      <td>31</td>\n",
              "      <td>5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>90.07</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9010</th>\n",
              "      <td>15786463</td>\n",
              "      <td>Hsing</td>\n",
              "      <td>645</td>\n",
              "      <td>Germany</td>\n",
              "      <td>Female</td>\n",
              "      <td>59</td>\n",
              "      <td>8</td>\n",
              "      <td>121669.93</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>91.75</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5548</th>\n",
              "      <td>15639662</td>\n",
              "      <td>Phillips</td>\n",
              "      <td>710</td>\n",
              "      <td>France</td>\n",
              "      <td>Male</td>\n",
              "      <td>38</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>96.27</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4989</th>\n",
              "      <td>15602851</td>\n",
              "      <td>Ozioma</td>\n",
              "      <td>629</td>\n",
              "      <td>France</td>\n",
              "      <td>Male</td>\n",
              "      <td>40</td>\n",
              "      <td>9</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>106.67</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c31cddf2-91e3-4902-bc4c-e370ceb8fde8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c31cddf2-91e3-4902-bc4c-e370ceb8fde8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c31cddf2-91e3-4902-bc4c-e370ceb8fde8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Bivariate Analysis"
      ],
      "metadata": {
        "id": "QYZhzPVH0YQB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(y=  \"EstimatedSalary\",x=\"Gender\",hue=\"HasCrCard\",data=dt2[:100])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "YvKORr8p0a3J",
        "outputId": "092d5f8b-ceac-4f0f-c8cc-3fa52353afa2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f11560ef9d0>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Multivariate Analysis"
      ],
      "metadata": {
        "id": "V9yXX8cU0qmi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.lmplot(x = \"EstimatedSalary\",y = \"Balance\",hue=\"Gender\",data=dt2[:100])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 386
        },
        "id": "lsvgkOAB0ybF",
        "outputId": "3337e8d8-e880-4c4f-c922-73e6c7870420"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7f11560d6610>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432.125x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "**Handling Missing Value** \n",
        "\n",
        "There is no missing value so no need to do any preprocessing for null values\n"
      ],
      "metadata": {
        "id": "kc1hvnjU032t"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v7F1TTzQ09bD",
        "outputId": "2703bc36-6ebd-451b-873b-4fe0e9c13d45"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CustomerId         0\n",
              "Surname            0\n",
              "CreditScore        0\n",
              "Geography          0\n",
              "Gender             0\n",
              "Age                0\n",
              "Tenure             0\n",
              "Balance            0\n",
              "NumOfProducts      0\n",
              "HasCrCard          0\n",
              "IsActiveMember     0\n",
              "EstimatedSalary    0\n",
              "Exited             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num = dataset.select_dtypes(include=[\"float64\",\"int64\"])\n",
        "num.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "LuZhgL6H1Cor",
        "outputId": "b5216391-c58c-4fe5-ce2a-21c10bfb259c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CustomerId  CreditScore  Age  Tenure    Balance  EstimatedSalary  Exited\n",
              "0    15634602          619   42       2       0.00        101348.88       1\n",
              "1    15647311          608   41       1   83807.86        112542.58       0\n",
              "2    15619304          502   42       8  159660.80        113931.57       1\n",
              "3    15701354          699   39       1       0.00         93826.63       0\n",
              "4    15737888          850   43       2  125510.82         79084.10       0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5590d0f1-a3eb-461d-8104-0cc42a72fbe3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>15634602</td>\n",
              "      <td>619</td>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>101348.88</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>15647311</td>\n",
              "      <td>608</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>83807.86</td>\n",
              "      <td>112542.58</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>15619304</td>\n",
              "      <td>502</td>\n",
              "      <td>42</td>\n",
              "      <td>8</td>\n",
              "      <td>159660.80</td>\n",
              "      <td>113931.57</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15701354</td>\n",
              "      <td>699</td>\n",
              "      <td>39</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>93826.63</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15737888</td>\n",
              "      <td>850</td>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>125510.82</td>\n",
              "      <td>79084.10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5590d0f1-a3eb-461d-8104-0cc42a72fbe3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5590d0f1-a3eb-461d-8104-0cc42a72fbe3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5590d0f1-a3eb-461d-8104-0cc42a72fbe3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Outlier Remover**"
      ],
      "metadata": {
        "id": "ibQL3IpJ1Hsq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "figure = plt.figure(figsize = (8,10))\n",
        "for i,j in enumerate(num.columns):\n",
        "  plt.subplot(3,3,i+1)\n",
        "  sns.boxplot(num[j])\n",
        "  plt.title(j)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621
        },
        "id": "1LpRxgJW1J_u",
        "outputId": "8ab4b5e6-d7d7-4d33-af27-02e237692c9b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 576x720 with 7 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "V5-9qA4I1ZFZ",
        "outputId": "db574fe7-ec64-4313-c91d-0462391b2ef6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CustomerId   Surname  CreditScore Geography  Gender  Age  Tenure  \\\n",
              "0    15634602  Hargrave          619    France  Female   42       2   \n",
              "1    15647311      Hill          608     Spain  Female   41       1   \n",
              "2    15619304      Onio          502    France  Female   42       8   \n",
              "3    15701354      Boni          699    France  Female   39       1   \n",
              "4    15737888  Mitchell          850     Spain  Female   43       2   \n",
              "\n",
              "     Balance NumOfProducts HasCrCard IsActiveMember  EstimatedSalary  Exited  \n",
              "0       0.00             1         1              1        101348.88       1  \n",
              "1   83807.86             1         0              1        112542.58       0  \n",
              "2  159660.80             3         1              0        113931.57       1  \n",
              "3       0.00             2         0              0         93826.63       0  \n",
              "4  125510.82             1         1              1         79084.10       0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-da2f3809-c96f-4a10-846c-b91fdd6d5f32\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>Surname</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Geography</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>15634602</td>\n",
              "      <td>Hargrave</td>\n",
              "      <td>619</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>101348.88</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>15647311</td>\n",
              "      <td>Hill</td>\n",
              "      <td>608</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>83807.86</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>112542.58</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>15619304</td>\n",
              "      <td>Onio</td>\n",
              "      <td>502</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>42</td>\n",
              "      <td>8</td>\n",
              "      <td>159660.80</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>113931.57</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15701354</td>\n",
              "      <td>Boni</td>\n",
              "      <td>699</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>39</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>93826.63</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15737888</td>\n",
              "      <td>Mitchell</td>\n",
              "      <td>850</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>125510.82</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>79084.10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da2f3809-c96f-4a10-846c-b91fdd6d5f32')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-da2f3809-c96f-4a10-846c-b91fdd6d5f32 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-da2f3809-c96f-4a10-846c-b91fdd6d5f32');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset.size"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bWJPnk1b1krt",
        "outputId": "db182575-752e-4123-b238-bba5f09b0d80"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "130000"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Q1 = dataset.quantile(0.25)\n",
        "Q3 = dataset.quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "dataset = dataset[~((dataset < (Q1 - 1.5 * IQR)) |(dataset > (Q3 + 1.5 * IQR))).any(axis=1)]\n"
      ],
      "metadata": {
        "id": "lu1DGUgn1wOD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dataset.size"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "esDNLSQ417S9",
        "outputId": "c2b26eca-7334-484d-fc37-cce84a025e72"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "99801"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "Ic6YULAu19pt",
        "outputId": "7d6acd56-8177-49c0-9485-3002bdd88d3f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CustomerId   Surname  CreditScore Geography  Gender  Age  Tenure  \\\n",
              "1    15647311      Hill          608     Spain  Female   41       1   \n",
              "3    15701354      Boni          699    France  Female   39       1   \n",
              "4    15737888  Mitchell          850     Spain  Female   43       2   \n",
              "6    15592531  Bartlett          822    France    Male   50       7   \n",
              "8    15792365        He          501    France    Male   44       4   \n",
              "\n",
              "     Balance NumOfProducts HasCrCard IsActiveMember  EstimatedSalary  Exited  \n",
              "1   83807.86             1         0              1        112542.58       0  \n",
              "3       0.00             2         0              0         93826.63       0  \n",
              "4  125510.82             1         1              1         79084.10       0  \n",
              "6       0.00             2         1              1         10062.80       0  \n",
              "8  142051.07             2         0              1         74940.50       0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d7d3581c-acaf-4acf-bff8-8cbef7de8f4c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerId</th>\n",
              "      <th>Surname</th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Geography</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>NumOfProducts</th>\n",
              "      <th>HasCrCard</th>\n",
              "      <th>IsActiveMember</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>15647311</td>\n",
              "      <td>Hill</td>\n",
              "      <td>608</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>83807.86</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>112542.58</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15701354</td>\n",
              "      <td>Boni</td>\n",
              "      <td>699</td>\n",
              "      <td>France</td>\n",
              "      <td>Female</td>\n",
              "      <td>39</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>93826.63</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15737888</td>\n",
              "      <td>Mitchell</td>\n",
              "      <td>850</td>\n",
              "      <td>Spain</td>\n",
              "      <td>Female</td>\n",
              "      <td>43</td>\n",
              "      <td>2</td>\n",
              "      <td>125510.82</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>79084.10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>15592531</td>\n",
              "      <td>Bartlett</td>\n",
              "      <td>822</td>\n",
              "      <td>France</td>\n",
              "      <td>Male</td>\n",
              "      <td>50</td>\n",
              "      <td>7</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>10062.80</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>15792365</td>\n",
              "      <td>He</td>\n",
              "      <td>501</td>\n",
              "      <td>France</td>\n",
              "      <td>Male</td>\n",
              "      <td>44</td>\n",
              "      <td>4</td>\n",
              "      <td>142051.07</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>74940.50</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7d3581c-acaf-4acf-bff8-8cbef7de8f4c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d7d3581c-acaf-4acf-bff8-8cbef7de8f4c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d7d3581c-acaf-4acf-bff8-8cbef7de8f4c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Scaling the data**"
      ],
      "metadata": {
        "id": "GUjc0Ljz2F6t"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "num = num.drop(\"Exited\",axis=1)\n",
        "dataset[num.columns] = StandardScaler().fit_transform(dataset[num.columns])"
      ],
      "metadata": {
        "id": "NIZ8QGs12H4J"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "OneHotEncoding"
      ],
      "metadata": {
        "id": "wpzm5Jtd2Qam"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "cat = dataset.select_dtypes(exclude=[\"int64\",\"float64\"])\n",
        "cat.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U9tYwE6P2SGA",
        "outputId": "351a2757-dbe1-4486-83f3-2f1cdfef1f4f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Surname', 'Geography', 'Gender', 'NumOfProducts', 'HasCrCard',\n",
              "       'IsActiveMember'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mod = dataset.drop([\"Surname\",\"CustomerId\"],axis=1)\n",
        "dataset  = pd.get_dummies(drop_first=True,data=mod)\n",
        "dataset.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        },
        "id": "qVQNTPkd2cfO",
        "outputId": "dc7be8b9-06c3-4a96-dccd-c905b4b51fc7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   CreditScore       Age    Tenure   Balance  EstimatedSalary  Exited  \\\n",
              "1    -0.455004  0.599817 -1.403186  0.174070         0.221181       0   \n",
              "3     0.496133  0.350214 -1.403186 -1.159714        -0.104937       0   \n",
              "4     2.074392  0.849420 -1.055481  0.837764        -0.361820       0   \n",
              "6     1.781735  1.723029  0.683046 -1.159714        -1.564488       0   \n",
              "8    -1.573373  0.974221 -0.360070  1.100999        -0.434020       0   \n",
              "\n",
              "   Geography_Germany  Geography_Spain  Gender_Male  NumOfProducts_2  \\\n",
              "1                  0                1            0                0   \n",
              "3                  0                0            0                1   \n",
              "4                  0                1            0                0   \n",
              "6                  0                0            1                1   \n",
              "8                  0                0            1                1   \n",
              "\n",
              "   NumOfProducts_3  HasCrCard_1  IsActiveMember_1  \n",
              "1                0            0                 1  \n",
              "3                0            0                 0  \n",
              "4                0            1                 1  \n",
              "6                0            1                 1  \n",
              "8                0            0                 1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0c00a03d-f44c-4b8a-8b59-cc1891ef38aa\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Exited</th>\n",
              "      <th>Geography_Germany</th>\n",
              "      <th>Geography_Spain</th>\n",
              "      <th>Gender_Male</th>\n",
              "      <th>NumOfProducts_2</th>\n",
              "      <th>NumOfProducts_3</th>\n",
              "      <th>HasCrCard_1</th>\n",
              "      <th>IsActiveMember_1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.455004</td>\n",
              "      <td>0.599817</td>\n",
              "      <td>-1.403186</td>\n",
              "      <td>0.174070</td>\n",
              "      <td>0.221181</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.496133</td>\n",
              "      <td>0.350214</td>\n",
              "      <td>-1.403186</td>\n",
              "      <td>-1.159714</td>\n",
              "      <td>-0.104937</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2.074392</td>\n",
              "      <td>0.849420</td>\n",
              "      <td>-1.055481</td>\n",
              "      <td>0.837764</td>\n",
              "      <td>-0.361820</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1.781735</td>\n",
              "      <td>1.723029</td>\n",
              "      <td>0.683046</td>\n",
              "      <td>-1.159714</td>\n",
              "      <td>-1.564488</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>-1.573373</td>\n",
              "      <td>0.974221</td>\n",
              "      <td>-0.360070</td>\n",
              "      <td>1.100999</td>\n",
              "      <td>-0.434020</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c00a03d-f44c-4b8a-8b59-cc1891ef38aa')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0c00a03d-f44c-4b8a-8b59-cc1891ef38aa button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0c00a03d-f44c-4b8a-8b59-cc1891ef38aa');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Splitting The Data**"
      ],
      "metadata": {
        "id": "YFTaL9vY2s2Q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "nPxQmZUU2vI3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(dataset.drop(\"Exited\",axis=1),dataset[\"Exited\"], test_size=0.33, random_state=42)"
      ],
      "metadata": {
        "id": "4IQW-Pox2zDX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "gv0fWw0X27M3",
        "outputId": "0c1f3f54-c594-4ab3-c12e-07daf69e3387"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      CreditScore       Age    Tenure   Balance  EstimatedSalary  \\\n",
              "5699     0.339352 -0.148991  0.335341  1.002652        -0.220065   \n",
              "9362     0.339352 -0.148991 -0.707775  1.023467        -1.090516   \n",
              "7166    -0.350483  0.475016  1.030751 -1.159714        -0.342299   \n",
              "6009    -1.322524 -0.398594 -0.012365 -1.159714         1.065572   \n",
              "1470    -0.873086 -0.648196 -1.403186 -0.179488        -0.663047   \n",
              "...           ...       ...       ...       ...              ...   \n",
              "6833     0.245283 -0.273792  1.726162  0.192161         0.808182   \n",
              "7039    -1.343428  2.971042 -1.403186  1.448630        -0.745551   \n",
              "1127    -1.071675  1.099022 -0.707775  1.127783        -0.060021   \n",
              "9911     0.318448  0.974221 -0.707775  0.674980        -1.325708   \n",
              "9486     1.060543 -0.523395  0.335341  1.668808         1.076720   \n",
              "\n",
              "      Geography_Germany  Geography_Spain  Gender_Male  NumOfProducts_2  \\\n",
              "5699                  0                0            1                0   \n",
              "9362                  0                0            1                0   \n",
              "7166                  0                1            0                1   \n",
              "6009                  0                1            1                1   \n",
              "1470                  1                0            0                1   \n",
              "...                 ...              ...          ...              ...   \n",
              "6833                  0                0            0                0   \n",
              "7039                  1                0            1                0   \n",
              "1127                  1                0            0                1   \n",
              "9911                  0                0            1                0   \n",
              "9486                  0                0            1                0   \n",
              "\n",
              "      NumOfProducts_3  HasCrCard_1  IsActiveMember_1  \n",
              "5699                0            1                 1  \n",
              "9362                0            1                 1  \n",
              "7166                0            1                 0  \n",
              "6009                0            1                 0  \n",
              "1470                0            1                 1  \n",
              "...               ...          ...               ...  \n",
              "6833                0            0                 0  \n",
              "7039                0            0                 1  \n",
              "1127                0            1                 1  \n",
              "9911                0            0                 0  \n",
              "9486                0            1                 1  \n",
              "\n",
              "[5143 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e6cfea26-2907-438e-98c6-85714e5cf713\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CreditScore</th>\n",
              "      <th>Age</th>\n",
              "      <th>Tenure</th>\n",
              "      <th>Balance</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Geography_Germany</th>\n",
              "      <th>Geography_Spain</th>\n",
              "      <th>Gender_Male</th>\n",
              "      <th>NumOfProducts_2</th>\n",
              "      <th>NumOfProducts_3</th>\n",
              "      <th>HasCrCard_1</th>\n",
              "      <th>IsActiveMember_1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5699</th>\n",
              "      <td>0.339352</td>\n",
              "      <td>-0.148991</td>\n",
              "      <td>0.335341</td>\n",
              "      <td>1.002652</td>\n",
              "      <td>-0.220065</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9362</th>\n",
              "      <td>0.339352</td>\n",
              "      <td>-0.148991</td>\n",
              "      <td>-0.707775</td>\n",
              "      <td>1.023467</td>\n",
              "      <td>-1.090516</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7166</th>\n",
              "      <td>-0.350483</td>\n",
              "      <td>0.475016</td>\n",
              "      <td>1.030751</td>\n",
              "      <td>-1.159714</td>\n",
              "      <td>-0.342299</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6009</th>\n",
              "      <td>-1.322524</td>\n",
              "      <td>-0.398594</td>\n",
              "      <td>-0.012365</td>\n",
              "      <td>-1.159714</td>\n",
              "      <td>1.065572</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1470</th>\n",
              "      <td>-0.873086</td>\n",
              "      <td>-0.648196</td>\n",
              "      <td>-1.403186</td>\n",
              "      <td>-0.179488</td>\n",
              "      <td>-0.663047</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6833</th>\n",
              "      <td>0.245283</td>\n",
              "      <td>-0.273792</td>\n",
              "      <td>1.726162</td>\n",
              "      <td>0.192161</td>\n",
              "      <td>0.808182</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7039</th>\n",
              "      <td>-1.343428</td>\n",
              "      <td>2.971042</td>\n",
              "      <td>-1.403186</td>\n",
              "      <td>1.448630</td>\n",
              "      <td>-0.745551</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1127</th>\n",
              "      <td>-1.071675</td>\n",
              "      <td>1.099022</td>\n",
              "      <td>-0.707775</td>\n",
              "      <td>1.127783</td>\n",
              "      <td>-0.060021</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9911</th>\n",
              "      <td>0.318448</td>\n",
              "      <td>0.974221</td>\n",
              "      <td>-0.707775</td>\n",
              "      <td>0.674980</td>\n",
              "      <td>-1.325708</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9486</th>\n",
              "      <td>1.060543</td>\n",
              "      <td>-0.523395</td>\n",
              "      <td>0.335341</td>\n",
              "      <td>1.668808</td>\n",
              "      <td>1.076720</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5143 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6cfea26-2907-438e-98c6-85714e5cf713')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e6cfea26-2907-438e-98c6-85714e5cf713 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e6cfea26-2907-438e-98c6-85714e5cf713');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "DHj2jQid28BE"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}